<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ohgiraffers.section01.xmlmapper.ElementMapper">
    <resultMap id="menuResultMap1" type="com.ohgiraffers.section01.xmlmapper.MenuDTO">
        <id property="menuCode" column="MenuCode"/>
        <result property="menuName" column="MENU_CODE"/>
        <result property="menuPrice" column="MENU_PRICE"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
    </resultMap>
    <resultMap id="menuResultMap2" type="com.ohgiraffers.section01.xmlmapper.MenuDTO"
               extends ="menuResultMap1">
        <result property="orderableStatus" column="ORDERABLE_STATUS"/>
    </resultMap>
    <select id="selectResultMapTest" resultMap="menuResultMap2">
        SELECT
            , A.MENU_CODE
            , A.MENU_NAME
            , A.MENU_PRICE
            , A.CATEGORY_CODE
            , A.ORDERABLE_STATUS
          FROM TBL_MENU A
         WHERE A.ORDERABLE_STATUS = 'Y'
    </select>

<!-- 1. 매핑해놓은것을 재사용할 경우를 생각해서 만들기  -->
<!-- join을 위한 resultMap들   -->
<!--    <resultMap id="menuAndCategoryResultMap"-->
<!--               type="com.ohgiraffers.section01.xmlmapper.MenuAndCategoryDTO">-->
<!--        <id property="menuCode" column="MenuCode"/>-->
<!--        <result property="menuName" column="MENU_CODE"/>-->
<!--        <result property="menuPrice" column="MENU_PRICE"/>-->
<!--        <result property="orderableStatus" column="ORDERABLE_STATUS"/>-->
<!--        <association property="category" resultMap="categoryResultMap"/>-->
<!--&lt;!&ndash;    2번 CategoryDTO 매핑한게 1번 reusltMap에 들어가야 함으로 <association> 을 활용하여 넣어준다.&ndash;&gt;-->
<!--&lt;!&ndash;        CATEGORY_CODE 부분은 CategoryDTO로 받기 때문에 뺌. &ndash;&gt;-->
<!--    </resultMap>-->
<!--    <resultMap id="categoryResultMap" type="com.ohgiraffers.section01.xmlmapper.CategoryDTO">-->
<!--        <id property="categoryCode" column="CATEGORY_CODE"/>-->
<!--        <result property="categoryName" column="CATEGORY_NAME" />-->
<!--        <result property="refCategoryCode" column="REF_CATEGORY_CODE"/>-->
<!--    </resultMap>-->

<!-- 2. 조인할때만 사용할 경우 (재사용 할 생각 x)-->
    <resultMap id="menuAndCategoryResultMap"
               type="com.ohgiraffers.section01.xmlmapper.MenuAndCategoryDTO">
        <id property="menuCode" column="MenuCode"/>
        <result property="menuName" column="MENU_CODE"/>
        <result property="menuPrice" column="MENU_PRICE"/>
        <result property="orderableStatus" column="ORDERABLE_STATUS"/>
        <association property="category" javaType="com.ohgiraffers.section01.xmlmapper.CategoryDTO">
            <id property="categoryCode" column="CATEGORY_CODE"/>
            <result property="categoryName" column="CATEGORY_NAME" />
            <result property="refCategoryCode" column="REF_CATEGORY_CODE"/>
        </association>
    </resultMap>


<!--    resultMap을 하자. 명시적으로 ? 09 08 강의 돌려듣기 (resultMap 쓰자, type말고?) -->
    <select id="selectResultMapAssociationTest" resultMap="menuAndCategoryResultMap">
        SELECT
               A.MENU_CODE
             , A.MENU_NAME
             , A.MENU_PRICE
             , A.CATEGORY_CODE
             , B.CATEGORY_NAME
             , B.REF_CATEGORY_CODE
             , A.ORDERABLE_STATUS
          FROM TBL_MENU a
          JOIN TBL_CATEGORY B ON (A.CATEGORY_CODE = B.CATEGORY_CODE)
<!--        위에 SELECT에 CATEGORY_CODE는 A,B 동일하기에 하나만 가져온다.-->
         WHERE A.ORDERABLE_STATUS = 'Y'
    </select>

<!--    <resultMap id="categoryAndMenuResultMap" type="com.ohgiraffers.section01.xmlmapper.CategoryAndMenuDTO">-->
<!--        <id property="categoryCode" column="CATEGORY_CODE"/>-->
<!--        <result property="categoryName" column="CATEGORY_NAME"/>-->
<!--        <result property="refCategoryName" column="REF_CATEGORY_NAME"/>-->
<!--        <collection property="menus" resultMap="menuResultMap"/>-->
<!--    </resultMap>-->
<!--&lt;!&ndash;1.resultmap 두개쓰는 방식 (collection 사용)&ndash;&gt;-->
<!--    <resultMap id="menuResultMap" type="com.ohgiraffers.section01.xmlmapper.MenuDTO">-->
<!--        <id property="menuCode" column="MENU_CODE"/>-->
<!--        <result property="menuName" column="MENU_NAME"/>-->
<!--        <result property="menuPrice" column="MENU_PRICE"/>-->
<!--        <result property="categoryCode" column="CATEGORY_CODE"/>-->
<!--        <result property="orderableStatus" column="ORDERABLE_STATUS"/>-->
<!--    </resultMap>-->

<!-- 2. ofType을 통한 resultmap 하나로 두개 매핑하기.-->
    <resultMap id="categoryAndMenuResultMap" type="com.ohgiraffers.section01.xmlmapper.CategoryAndMenuDTO">
        <id property="categoryCode" column="CATEGORY_CODE"/>
        <result property="categoryName" column="CATEGORY_NAME"/>
        <result property="refCategoryName" column="REF_CATEGORY_NAME"/>
        <collection property="menus" ofType="com.ohgiraffers.section01.xmlmapper.MenuDTO">
            <id property="menuCode" column="MENU_CODE"/>
            <result property="menuName" column="MENU_NAME"/>
            <result property="menuPrice" column="MENU_PRICE"/>
            <result property="categoryCode" column="CATEGORY_CODE"/>
            <result property="orderableStatus" column="ORDERABLE_STATUS"/>
        </collection>
    </resultMap>

    <select id="selectResultMapCollectionTest" resultMap="categoryAndMenuResultMap">
        SELECT
                B.MENU_CODE
                , B.MENU_NAME
                , B.MENU_PRICE
                , B.CATEGORY_CODE
                , A.CATEGORY_NAME
                , A.REF_CATEGORY_CODE
                , B.ORDERABLE_STATUS
        FROM TBL_CATEGORY A
        JOIN TBL_MENU B ON (A.CATEGORY_CODE = B.CATEGORY_CODE)

        WHERE B.ORDERABLE_STATUS = 'Y'
    </select>
</mapper>