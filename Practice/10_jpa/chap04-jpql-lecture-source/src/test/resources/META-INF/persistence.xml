<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence" version="2.2">

    <!-- 설명. 엔티티 매니저 팩토리 식별하기 위한 이름 설정 -->
    <persistence-unit name="jpatest">

        <!-- 설명. 엔티티는 설정에 따로 추가할 예정 -->package com.ohgiraffers.section02.onetomany;

        import jakarta.persistence.Column;
        import jakarta.persistence.Entity;
        import jakarta.persistence.Id;
        import jakarta.persistence.Table;

        @Entity(name="menu")
        @Table(name="tbl_menu")
        public class Menu {
        @Id
        @Column(name="menu_code")
        private int menuCode;

        @Column(name="menu_name")
        private String menuName;

        @Column(name="menu_price")
        private int menuPrice;

        @Column(name="category_code")
        private int categoryCode;

        @Column(name="orderable_status")
        private String orderableStatus;

        public Menu() {
        }

        public Menu(int menuCode, String menuName, int menuPrice, int categoryCode, String orderableStatus) {
        this.menuCode = menuCode;
        this.menuName = menuName;
        this.menuPrice = menuPrice;
        this.categoryCode = categoryCode;
        this.orderableStatus = orderableStatus;
        }

        public int getMenuCode() {
        return menuCode;
        }

        public void setMenuCode(int menuCode) {
        this.menuCode = menuCode;
        }

        public String getMenuName() {
        return menuName;
        }

        public void setMenuName(String menuName) {
        this.menuName = menuName;
        }

        public int getMenuPrice() {
        return menuPrice;
        }

        public void setMenuPrice(int menuPrice) {
        this.menuPrice = menuPrice;
        }

        public int getCategoryCode() {
        return categoryCode;
        }

        public void setCategoryCode(int categoryCode) {
        this.categoryCode = categoryCode;
        }

        public String getOrderableStatus() {
        return orderableStatus;
        }

        public void setOrderableStatus(String orderableStatus) {
        this.orderableStatus = orderableStatus;
        }

        @Override
        public String toString() {
        return "Menu{" +
        "menuCode=" + menuCode +
        ", menuName='" + menuName + '\'' +
        ", menuPrice=" + menuPrice +
        ", categoryCode=" + categoryCode +
        ", orderableStatus='" + orderableStatus + '\'' +
        '}';
        }
        }


        <properties>

            <!-- 설명. 데이터베이스 연결 정보 -->
            <property name="jakarta.persistence.jdbc.driver" value="com.mysql.cj.jdbc.Driver"/>
            <property name="jakarta.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/menudb"/>
            <property name="jakarta.persistence.jdbc.user" value="swcamp"/>
            <property name="jakarta.persistence.jdbc.password" value="swcamp"/>

            <!-- 설명. hibernate 설정(실행되는 sql 구문을 format 형태로 보여주기) -->
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.MariaDBDialect"/>

            <!-- 설명. auto ddl 설정
                  create: 애플리케이션 실행 시 기존 테이블이 있다면 drop, 그리고 항상 create table 진행
                  create-drop: 애플리케이션 실행 시 항상 create table 진행, 종료 시 drop
                  update: 애플리케이션 실행 시 기존 테이블이 없다면 create table, 있다면 컬럼이 추가 될 때만 alter
             -->
            <!--            <property name="hibernate.hbm2ddl.auto" value="create"/>-->
        </properties>
    </persistence-unit>
</persistence>